syntax = "proto3";

package helloworld.v1;

import "google/api/annotations.proto";
import "employee/v1/employee.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "DM/api/sub_department/v1;v1";

option java_multiple_files = true;
option java_package = "dev.kratos.api.helloworld.v1";
option java_outer_classname = "HelloworldProtoV1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "Sub_Department",
		version: "1.0",
		contact: {
			name: "Department managerment project",
			url: "https://github.com/grpc-ecosystem/grpc-gateway",
			email: "none@example.com",
		},
		license: {
			name: "BSD 3-Clause License",
			url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt",
		},
		extensions: {
			key: "x-something-something",
			value {
				string_value: "yadda",
			}
		}
  }
};

service SubDepartmentService{
    rpc CreateSubDepartment(CreateSubDepartmentRequest) returns (CreateSubDepartmentRespone){
        option (google.api.http) = {
            post: "/sub_departments"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            external_docs: {
              url: "https://github.com/grpc-ecosystem/grpc-gateway",
              description: "Create a subdepartment"
            }
        };
    };

    rpc GetAllSubDepartment(GetAllSubDepartmentRequest) returns (GetAllSubDepartmentRespone){
        option (google.api.http) = {
            get: "/sub_departments"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            external_docs: {
              url: "https://github.com/grpc-ecosystem/grpc-gateway",
              description: "Get all subdepartment"
            }
        };
    }

    rpc GetSubDepartmentByPage(GetSubDepartmentByPageRequest) returns (GetSubDepartmentByPageRespone){
        option (google.api.http) = {
            get : "/sub_departments/page"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            external_docs: {
              url: "https://github.com/grpc-ecosystem/grpc-gateway",
              description: "Get subdepartment per page"
            }
        };
    }

    rpc GetSubDepartmentByID(GetSubDepartmentByIDResquest) returns (GetSubDepartmentByIDRespone){
        option (google.api.http) = {
            get: "/sub_departments/{id}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            external_docs: {
              url: "https://github.com/grpc-ecosystem/grpc-gateway",
              description: "Get subdepartment by ID"
            }
        };
    }

    rpc UpdateSubDepartment(UpdateSubDepartmentResquest) returns (UpdateSubDepartmentRespone){
        option (google.api.http) = {
            put: "/sub_departments/{id}"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            external_docs: {
              url: "https://github.com/grpc-ecosystem/grpc-gateway",
              description: "Update subdepartment"
            }
        };
    }

    rpc DeleteSubDepartment(DeleteSubDepartmentResquest) returns (DeleteSubDepartmentRespone){
        option (google.api.http) = {
            delete: "/sub_departments/{id}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            external_docs: {
              url: "https://github.com/grpc-ecosystem/grpc-gateway",
              description: "Delete a subdepartment"
            }
        };
    }
}

message CreateSubDepartmentRequest{
    string name = 1;
    uint32 department_id = 2;
}

message CreateSubDepartmentRespone{
    uint32 id = 1;
}

message GetAllSubDepartmentRequest{}

message GetAllSubDepartmentRespone{
    repeated SubDepartment subdepartments = 1;
}

message GetSubDepartmentByIDResquest{
    uint32 id = 1;
}

message GetSubDepartmentByIDRespone{
    uint32 id = 1;
    string name = 2;
}

message UpdateSubDepartmentResquest{
    uint32 id = 1;
    string name = 2;
    uint32 department_id = 3;
}

message UpdateSubDepartmentRespone{}

message DeleteSubDepartmentResquest{
    uint32 id = 1;
}

message DeleteSubDepartmentRespone{}

message GetSubDepartmentByPageRequest{
    uint32 page = 1;
    uint32 limit = 2;
}

message GetSubDepartmentByPageRespone{
    repeated SubDepartment subdepartments = 1;
}

message SubDepartment{
    uint32 id = 1;
    string name = 2;
    uint32 department_id = 3;
    repeated Employee employees = 4;
}