// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.6.1
// source: sub_department/v1/sub_department.proto

package v1

import (
	v1 "DM/api/employee/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSubDepartmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DepartmentId uint32 `protobuf:"varint,2,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
}

func (x *CreateSubDepartmentRequest) Reset() {
	*x = CreateSubDepartmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sub_department_v1_sub_department_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubDepartmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubDepartmentRequest) ProtoMessage() {}

func (x *CreateSubDepartmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sub_department_v1_sub_department_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubDepartmentRequest.ProtoReflect.Descriptor instead.
func (*CreateSubDepartmentRequest) Descriptor() ([]byte, []int) {
	return file_sub_department_v1_sub_department_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSubDepartmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSubDepartmentRequest) GetDepartmentId() uint32 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

type CreateSubDepartmentRespone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateSubDepartmentRespone) Reset() {
	*x = CreateSubDepartmentRespone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sub_department_v1_sub_department_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubDepartmentRespone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubDepartmentRespone) ProtoMessage() {}

func (x *CreateSubDepartmentRespone) ProtoReflect() protoreflect.Message {
	mi := &file_sub_department_v1_sub_department_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubDepartmentRespone.ProtoReflect.Descriptor instead.
func (*CreateSubDepartmentRespone) Descriptor() ([]byte, []int) {
	return file_sub_department_v1_sub_department_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSubDepartmentRespone) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAllSubDepartmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllSubDepartmentRequest) Reset() {
	*x = GetAllSubDepartmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sub_department_v1_sub_department_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSubDepartmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSubDepartmentRequest) ProtoMessage() {}

func (x *GetAllSubDepartmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sub_department_v1_sub_department_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSubDepartmentRequest.ProtoReflect.Descriptor instead.
func (*GetAllSubDepartmentRequest) Descriptor() ([]byte, []int) {
	return file_sub_department_v1_sub_department_proto_rawDescGZIP(), []int{2}
}

type GetAllSubDepartmentRespone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subdepartments []*SubDepartment `protobuf:"bytes,1,rep,name=subdepartments,proto3" json:"subdepartments,omitempty"`
}

func (x *GetAllSubDepartmentRespone) Reset() {
	*x = GetAllSubDepartmentRespone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sub_department_v1_sub_department_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSubDepartmentRespone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSubDepartmentRespone) ProtoMessage() {}

func (x *GetAllSubDepartmentRespone) ProtoReflect() protoreflect.Message {
	mi := &file_sub_department_v1_sub_department_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSubDepartmentRespone.ProtoReflect.Descriptor instead.
func (*GetAllSubDepartmentRespone) Descriptor() ([]byte, []int) {
	return file_sub_department_v1_sub_department_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllSubDepartmentRespone) GetSubdepartments() []*SubDepartment {
	if x != nil {
		return x.Subdepartments
	}
	return nil
}

type GetSubDepartmentByIDResquest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSubDepartmentByIDResquest) Reset() {
	*x = GetSubDepartmentByIDResquest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sub_department_v1_sub_department_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubDepartmentByIDResquest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubDepartmentByIDResquest) ProtoMessage() {}

func (x *GetSubDepartmentByIDResquest) ProtoReflect() protoreflect.Message {
	mi := &file_sub_department_v1_sub_department_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubDepartmentByIDResquest.ProtoReflect.Descriptor instead.
func (*GetSubDepartmentByIDResquest) Descriptor() ([]byte, []int) {
	return file_sub_department_v1_sub_department_proto_rawDescGZIP(), []int{4}
}

func (x *GetSubDepartmentByIDResquest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSubDepartmentByIDRespone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetSubDepartmentByIDRespone) Reset() {
	*x = GetSubDepartmentByIDRespone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sub_department_v1_sub_department_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubDepartmentByIDRespone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubDepartmentByIDRespone) ProtoMessage() {}

func (x *GetSubDepartmentByIDRespone) ProtoReflect() protoreflect.Message {
	mi := &file_sub_department_v1_sub_department_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubDepartmentByIDRespone.ProtoReflect.Descriptor instead.
func (*GetSubDepartmentByIDRespone) Descriptor() ([]byte, []int) {
	return file_sub_department_v1_sub_department_proto_rawDescGZIP(), []int{5}
}

func (x *GetSubDepartmentByIDRespone) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSubDepartmentByIDRespone) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateSubDepartmentResquest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DepartmentId uint32 `protobuf:"varint,3,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
}

func (x *UpdateSubDepartmentResquest) Reset() {
	*x = UpdateSubDepartmentResquest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sub_department_v1_sub_department_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubDepartmentResquest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubDepartmentResquest) ProtoMessage() {}

func (x *UpdateSubDepartmentResquest) ProtoReflect() protoreflect.Message {
	mi := &file_sub_department_v1_sub_department_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubDepartmentResquest.ProtoReflect.Descriptor instead.
func (*UpdateSubDepartmentResquest) Descriptor() ([]byte, []int) {
	return file_sub_department_v1_sub_department_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSubDepartmentResquest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSubDepartmentResquest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSubDepartmentResquest) GetDepartmentId() uint32 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

type UpdateSubDepartmentRespone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSubDepartmentRespone) Reset() {
	*x = UpdateSubDepartmentRespone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sub_department_v1_sub_department_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubDepartmentRespone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubDepartmentRespone) ProtoMessage() {}

func (x *UpdateSubDepartmentRespone) ProtoReflect() protoreflect.Message {
	mi := &file_sub_department_v1_sub_department_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubDepartmentRespone.ProtoReflect.Descriptor instead.
func (*UpdateSubDepartmentRespone) Descriptor() ([]byte, []int) {
	return file_sub_department_v1_sub_department_proto_rawDescGZIP(), []int{7}
}

type DeleteSubDepartmentResquest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSubDepartmentResquest) Reset() {
	*x = DeleteSubDepartmentResquest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sub_department_v1_sub_department_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubDepartmentResquest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubDepartmentResquest) ProtoMessage() {}

func (x *DeleteSubDepartmentResquest) ProtoReflect() protoreflect.Message {
	mi := &file_sub_department_v1_sub_department_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubDepartmentResquest.ProtoReflect.Descriptor instead.
func (*DeleteSubDepartmentResquest) Descriptor() ([]byte, []int) {
	return file_sub_department_v1_sub_department_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteSubDepartmentResquest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteSubDepartmentRespone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSubDepartmentRespone) Reset() {
	*x = DeleteSubDepartmentRespone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sub_department_v1_sub_department_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubDepartmentRespone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubDepartmentRespone) ProtoMessage() {}

func (x *DeleteSubDepartmentRespone) ProtoReflect() protoreflect.Message {
	mi := &file_sub_department_v1_sub_department_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubDepartmentRespone.ProtoReflect.Descriptor instead.
func (*DeleteSubDepartmentRespone) Descriptor() ([]byte, []int) {
	return file_sub_department_v1_sub_department_proto_rawDescGZIP(), []int{9}
}

type GetSubDepartmentByPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetSubDepartmentByPageRequest) Reset() {
	*x = GetSubDepartmentByPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sub_department_v1_sub_department_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubDepartmentByPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubDepartmentByPageRequest) ProtoMessage() {}

func (x *GetSubDepartmentByPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sub_department_v1_sub_department_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubDepartmentByPageRequest.ProtoReflect.Descriptor instead.
func (*GetSubDepartmentByPageRequest) Descriptor() ([]byte, []int) {
	return file_sub_department_v1_sub_department_proto_rawDescGZIP(), []int{10}
}

func (x *GetSubDepartmentByPageRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSubDepartmentByPageRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSubDepartmentByPageRespone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subdepartments []*SubDepartment `protobuf:"bytes,1,rep,name=subdepartments,proto3" json:"subdepartments,omitempty"`
}

func (x *GetSubDepartmentByPageRespone) Reset() {
	*x = GetSubDepartmentByPageRespone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sub_department_v1_sub_department_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubDepartmentByPageRespone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubDepartmentByPageRespone) ProtoMessage() {}

func (x *GetSubDepartmentByPageRespone) ProtoReflect() protoreflect.Message {
	mi := &file_sub_department_v1_sub_department_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubDepartmentByPageRespone.ProtoReflect.Descriptor instead.
func (*GetSubDepartmentByPageRespone) Descriptor() ([]byte, []int) {
	return file_sub_department_v1_sub_department_proto_rawDescGZIP(), []int{11}
}

func (x *GetSubDepartmentByPageRespone) GetSubdepartments() []*SubDepartment {
	if x != nil {
		return x.Subdepartments
	}
	return nil
}

type SubDepartment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DepartmentId uint32         `protobuf:"varint,3,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	Employees    []*v1.Employee `protobuf:"bytes,4,rep,name=employees,proto3" json:"employees,omitempty"`
}

func (x *SubDepartment) Reset() {
	*x = SubDepartment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sub_department_v1_sub_department_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubDepartment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubDepartment) ProtoMessage() {}

func (x *SubDepartment) ProtoReflect() protoreflect.Message {
	mi := &file_sub_department_v1_sub_department_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubDepartment.ProtoReflect.Descriptor instead.
func (*SubDepartment) Descriptor() ([]byte, []int) {
	return file_sub_department_v1_sub_department_proto_rawDescGZIP(), []int{12}
}

func (x *SubDepartment) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubDepartment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubDepartment) GetDepartmentId() uint32 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *SubDepartment) GetEmployees() []*v1.Employee {
	if x != nil {
		return x.Employees
	}
	return nil
}

var File_sub_department_v1_sub_department_proto protoreflect.FileDescriptor

var file_sub_department_v1_sub_department_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x55, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x75,
	0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x2e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x1b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x22, 0x49,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x65, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x73, 0x75,
	0x62, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0e, 0x73, 0x75, 0x62, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x09, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x73, 0x32, 0xef, 0x06, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29,
	0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x73,
	0x75, 0x62, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x93,
	0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f,
	0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2b, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15,
	0x2f, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8e, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x1a,
	0x15, 0x2f, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8b, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a,
	0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x2a, 0x15, 0x2f,
	0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x42, 0x50, 0x0a, 0x1c, 0x64, 0x65, 0x76, 0x2e, 0x6b, 0x72, 0x61, 0x74,
	0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x1b, 0x44, 0x4d, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sub_department_v1_sub_department_proto_rawDescOnce sync.Once
	file_sub_department_v1_sub_department_proto_rawDescData = file_sub_department_v1_sub_department_proto_rawDesc
)

func file_sub_department_v1_sub_department_proto_rawDescGZIP() []byte {
	file_sub_department_v1_sub_department_proto_rawDescOnce.Do(func() {
		file_sub_department_v1_sub_department_proto_rawDescData = protoimpl.X.CompressGZIP(file_sub_department_v1_sub_department_proto_rawDescData)
	})
	return file_sub_department_v1_sub_department_proto_rawDescData
}

var file_sub_department_v1_sub_department_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_sub_department_v1_sub_department_proto_goTypes = []any{
	(*CreateSubDepartmentRequest)(nil),    // 0: helloworld.v1.CreateSubDepartmentRequest
	(*CreateSubDepartmentRespone)(nil),    // 1: helloworld.v1.CreateSubDepartmentRespone
	(*GetAllSubDepartmentRequest)(nil),    // 2: helloworld.v1.GetAllSubDepartmentRequest
	(*GetAllSubDepartmentRespone)(nil),    // 3: helloworld.v1.GetAllSubDepartmentRespone
	(*GetSubDepartmentByIDResquest)(nil),  // 4: helloworld.v1.GetSubDepartmentByIDResquest
	(*GetSubDepartmentByIDRespone)(nil),   // 5: helloworld.v1.GetSubDepartmentByIDRespone
	(*UpdateSubDepartmentResquest)(nil),   // 6: helloworld.v1.UpdateSubDepartmentResquest
	(*UpdateSubDepartmentRespone)(nil),    // 7: helloworld.v1.UpdateSubDepartmentRespone
	(*DeleteSubDepartmentResquest)(nil),   // 8: helloworld.v1.DeleteSubDepartmentResquest
	(*DeleteSubDepartmentRespone)(nil),    // 9: helloworld.v1.DeleteSubDepartmentRespone
	(*GetSubDepartmentByPageRequest)(nil), // 10: helloworld.v1.GetSubDepartmentByPageRequest
	(*GetSubDepartmentByPageRespone)(nil), // 11: helloworld.v1.GetSubDepartmentByPageRespone
	(*SubDepartment)(nil),                 // 12: helloworld.v1.SubDepartment
	(*v1.Employee)(nil),                   // 13: helloworld.v1.Employee
}
var file_sub_department_v1_sub_department_proto_depIdxs = []int32{
	12, // 0: helloworld.v1.GetAllSubDepartmentRespone.subdepartments:type_name -> helloworld.v1.SubDepartment
	12, // 1: helloworld.v1.GetSubDepartmentByPageRespone.subdepartments:type_name -> helloworld.v1.SubDepartment
	13, // 2: helloworld.v1.SubDepartment.employees:type_name -> helloworld.v1.Employee
	0,  // 3: helloworld.v1.SubDepartmentService.CreateSubDepartment:input_type -> helloworld.v1.CreateSubDepartmentRequest
	2,  // 4: helloworld.v1.SubDepartmentService.GetAllSubDepartment:input_type -> helloworld.v1.GetAllSubDepartmentRequest
	10, // 5: helloworld.v1.SubDepartmentService.GetSubDepartmentByPage:input_type -> helloworld.v1.GetSubDepartmentByPageRequest
	4,  // 6: helloworld.v1.SubDepartmentService.GetSubDepartmentByID:input_type -> helloworld.v1.GetSubDepartmentByIDResquest
	6,  // 7: helloworld.v1.SubDepartmentService.UpdateSubDepartment:input_type -> helloworld.v1.UpdateSubDepartmentResquest
	8,  // 8: helloworld.v1.SubDepartmentService.DeleteSubDepartment:input_type -> helloworld.v1.DeleteSubDepartmentResquest
	1,  // 9: helloworld.v1.SubDepartmentService.CreateSubDepartment:output_type -> helloworld.v1.CreateSubDepartmentRespone
	3,  // 10: helloworld.v1.SubDepartmentService.GetAllSubDepartment:output_type -> helloworld.v1.GetAllSubDepartmentRespone
	11, // 11: helloworld.v1.SubDepartmentService.GetSubDepartmentByPage:output_type -> helloworld.v1.GetSubDepartmentByPageRespone
	5,  // 12: helloworld.v1.SubDepartmentService.GetSubDepartmentByID:output_type -> helloworld.v1.GetSubDepartmentByIDRespone
	7,  // 13: helloworld.v1.SubDepartmentService.UpdateSubDepartment:output_type -> helloworld.v1.UpdateSubDepartmentRespone
	9,  // 14: helloworld.v1.SubDepartmentService.DeleteSubDepartment:output_type -> helloworld.v1.DeleteSubDepartmentRespone
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_sub_department_v1_sub_department_proto_init() }
func file_sub_department_v1_sub_department_proto_init() {
	if File_sub_department_v1_sub_department_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sub_department_v1_sub_department_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSubDepartmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sub_department_v1_sub_department_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSubDepartmentRespone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sub_department_v1_sub_department_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllSubDepartmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sub_department_v1_sub_department_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllSubDepartmentRespone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sub_department_v1_sub_department_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubDepartmentByIDResquest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sub_department_v1_sub_department_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubDepartmentByIDRespone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sub_department_v1_sub_department_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSubDepartmentResquest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sub_department_v1_sub_department_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSubDepartmentRespone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sub_department_v1_sub_department_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSubDepartmentResquest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sub_department_v1_sub_department_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSubDepartmentRespone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sub_department_v1_sub_department_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubDepartmentByPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sub_department_v1_sub_department_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubDepartmentByPageRespone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sub_department_v1_sub_department_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SubDepartment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sub_department_v1_sub_department_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sub_department_v1_sub_department_proto_goTypes,
		DependencyIndexes: file_sub_department_v1_sub_department_proto_depIdxs,
		MessageInfos:      file_sub_department_v1_sub_department_proto_msgTypes,
	}.Build()
	File_sub_department_v1_sub_department_proto = out.File
	file_sub_department_v1_sub_department_proto_rawDesc = nil
	file_sub_department_v1_sub_department_proto_goTypes = nil
	file_sub_department_v1_sub_department_proto_depIdxs = nil
}
